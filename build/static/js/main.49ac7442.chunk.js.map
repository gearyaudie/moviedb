{"version":3,"sources":["components/MovieCard.js","redux/types/movie.js","redux/actions/movie.js","components/MoviesApi.js","redux/reducers/movie.js","redux/reducers/index.js","redux/store.js","App.js","index.js"],"names":["MovieCard","movie","className","poster_path","src","alt","title","FETCH_MOVIE_SUCCESS","FETCH_MOVIE_FAILURE","FETCH_MOVIE_REQ","fetchMovieReq","type","fetchMovie","query","dispatch","fetch","then","res","json","data","results","movies","console","log","payload","catch","err","MoviesApi","useState","setQuery","movieData","useSelector","state","useDispatch","placeholder","value","onChange","e","preventDefault","target","length","map","id","initialState","loading","error","movieReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAEaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,qBAAKC,UAAU,gBAAf,SACGD,EAAME,YACL,qBACEC,IAAG,0CAAqCH,EAAME,aAC9CE,IAAG,UAAKJ,EAAMK,SAGhB,qBAAKJ,UAAU,uBCXVK,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAkB,kBCIlBC,EAAgB,WAC3B,MAAO,CACLC,KAAMF,IAkBGG,EAAa,SAACC,GACzB,OAAO,SAACC,GACNA,EAASJ,GACTK,MAAM,sIAAD,OACmIF,IAErIG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,GAAIA,EAAKC,QAAS,CAChB,IAAMC,EAASF,EAAKC,QACpBE,QAAQC,IAAIF,GACZP,EAxBD,CACLH,KAAMJ,EACNiB,QAsBiCH,SAE3BC,QAAQC,IAAI,sBAGfE,OAAM,SAACC,GACNZ,EAvBC,CACLH,KAAMH,EACNgB,QAqB+BE,SCtCtBC,EAAY,WACvB,MAA0BC,mBAAS,IAAnC,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAA4BD,mBAAS,IAArC,mBAEME,GAFN,UAEkBC,aAAY,SAACC,GAAD,OAAWA,EAAM/B,MAAMA,UAC/Ca,EAAWmB,cAajB,OACE,mCACE,sBAAK/B,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,2CACA,uBACES,KAAK,OACLT,UAAU,QACVgC,YAAY,uBACZC,MAAOtB,EACPuB,SArBK,SAACC,GACdA,EAAEC,iBACFT,EAASQ,EAAEE,OAAOJ,OAEJ,KAAVtB,EACFS,QAAQC,IAAI,aAEZT,EAASF,EAAWC,OAgBfiB,EAAUU,OAAS,GAAKV,EAAUU,OACjC,oBAAGtC,UAAU,UAAb,uBAAkC4B,EAAUU,OAA5C,cAEA,OAGJ,qBAAKtC,UAAU,aAAf,SACG4B,EAAUU,OAAS,EAClBV,EAAUW,KAAI,SAACxC,GAAD,OAAW,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMyC,OAE7D,qBAAKxC,UAAU,eAAf,SACE,iF,OCxCRyC,EAAe,CACnB1C,MAAO,GACP2C,SAAS,EACTC,MAAO,IA4BMC,EAzBM,WAAmC,IAAlCd,EAAiC,uDAAzBW,EAAcI,EAAW,uCACrD,OAAQA,EAAOpC,MACb,KAAKF,EACH,OAAO,2BACFuB,GADL,IAEEY,SAAS,IAEb,KAAKrC,EACH,MAAO,CACLqC,SAAS,EACT3C,MAAO8C,EAAOvB,QACdqB,MAAO,IAEX,KAAKrC,EACH,MAAO,CACLqC,MAAOE,EAAOvB,QACdvB,MAAO,IAEX,QACE,OAAO,eACF+B,K,OC7BEgB,EAAcC,0BAAgB,CACzChD,MAAO6C,I,iCCOMI,EALDC,sBACZH,EACAI,8BAAoBC,0BAAgBC,IAAQC,OCK/BC,MARf,WACE,OACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,OCHNO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.49ac7442.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const MovieCard = ({ movie }) => {\r\n  return (\r\n    <div className='movie-picture'>\r\n      {movie.poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\r\n          alt={`${movie.title}`}\r\n        />\r\n      ) : (\r\n        <div className='default-picture'></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const FETCH_MOVIE_SUCCESS = \"FETCH_MOVIE_SUCCESS\";\r\nexport const FETCH_MOVIE_FAILURE = \"FETCH_MOVIE_FAILURE\";\r\nexport const FETCH_MOVIE_REQ = \"FETCH_MOVIE_REQ\";\r\n","import {\r\n  FETCH_MOVIE_REQ,\r\n  FETCH_MOVIE_SUCCESS,\r\n  FETCH_MOVIE_FAILURE,\r\n} from \"../types/movie\";\r\n\r\nexport const fetchMovieReq = () => {\r\n  return {\r\n    type: FETCH_MOVIE_REQ,\r\n  };\r\n};\r\n\r\nexport const fetchMovieSuccess = (movie) => {\r\n  return {\r\n    type: FETCH_MOVIE_SUCCESS,\r\n    payload: movie,\r\n  };\r\n};\r\n\r\nexport const fetchMovieFailure = (error) => {\r\n  return {\r\n    type: FETCH_MOVIE_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const fetchMovie = (query) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchMovieReq);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=4e231f6fb9d04a262374aa38b9ee8418&language=en-US&page=1&include_adult=false&query=${query}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.results) {\r\n          const movies = data.results;\r\n          console.log(movies);\r\n          dispatch(fetchMovieSuccess(movies));\r\n        } else {\r\n          console.log(\"Movie Not Found\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchMovieFailure(err));\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MovieCard } from \"./MovieCard\";\r\nimport { fetchMovie } from \"../redux/actions/movie\";\r\n\r\nexport const MoviesApi = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const movieData = useSelector((state) => state.movie.movie);\r\n  const dispatch = useDispatch();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    setQuery(e.target.value);\r\n\r\n    if (query === \"\") {\r\n      console.log(\"no Movies\");\r\n    } else {\r\n      dispatch(fetchMovie(query));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"container\">\r\n          <h1>Movies DB</h1>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input\"\r\n            placeholder=\"Enter Your Movie ...\"\r\n            value={query}\r\n            onChange={search}\r\n          />\r\n          {movieData.length > 0 && movieData.length ? (\r\n            <p className=\"matches\">There are {movieData.length} matches</p>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n        </div>\r\n        <div className=\"movie-card\">\r\n          {movieData.length > 0 ? (\r\n            movieData.map((movie) => <MovieCard movie={movie} key={movie.id} />)\r\n          ) : (\r\n            <div className=\"display-none\">\r\n              <h3>No movies displayed, start searching!</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  FETCH_MOVIE_REQ,\r\n  FETCH_MOVIE_SUCCESS,\r\n  FETCH_MOVIE_FAILURE,\r\n} from \"../types/movie\";\r\n\r\nconst initialState = {\r\n  movie: [],\r\n  loading: true,\r\n  error: \"\",\r\n};\r\n\r\nconst movieReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MOVIE_REQ:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_MOVIE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        movie: action.payload,\r\n        error: \"\",\r\n      };\r\n    case FETCH_MOVIE_FAILURE:\r\n      return {\r\n        error: action.payload,\r\n        movie: [],\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default movieReducer;\r\n","import movieReducer from \"./movie\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  movie: movieReducer,\r\n});\r\n","import { rootReducer } from \"./reducers/index\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { MoviesApi } from \"./components/MoviesApi\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MoviesApi />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}